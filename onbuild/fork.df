# Demonstrates variable FROM directives and the ONBUILD directive
ARG OS_VERS=18.04
ARG DO_APT=false
ARG DO_COPY=no_copy

# === Base image with no apt installation ===
FROM ubuntu:${OS_VERS} as base_apt_false

RUN echo "do nothing here to start with"

# === Base image with apt installation ===
FROM base_apt_false as base_apt_true

RUN apt-get update -qq && apt-get install -yq \
        curl \
    && rm -rf /var/lib/apt/lists/*

# === Emulate copying in some large chunk of data ===
FROM base_apt_${DO_APT} as data_copy_true
ONBUILD COPY data /data
# The ONBUILD instruction adds to the image a trigger instruction to be executed at a later time, when the image is
# used as the base for another build. The trigger will be executed in the context of the downstream build, as if it had
# been inserted immediately after the FROM instruction in the downstream Dockerfile.

# === Emulate skipping adding that chunk of data===
FROM base_apt_${DO_APT} as data_copy_false
ONBUILD RUN mkdir -p /data echo  && echo "Don't have a cow, man" >> /data/yuge_file.bin

# === Build the final image ===
FROM data_copy_${DO_COPY}
# ONBUILD gets inserted here!!

CMD ["cat", "/data/yuge_file.bin"]


